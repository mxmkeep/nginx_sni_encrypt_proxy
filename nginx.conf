#user  nobody;
user  root;
worker_processes  auto;

#daemon off;
#master_process off;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       mime.types;
    default_type  application/octet-stream;

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    #gzip  on;

    #return proxy.pac file to wifi
    server {
        listen 8080;
        server_name proxy_file;
        location = /proxy.pac {
            root html;
        }
    }
    server {
        listen       80;
        server_name  localhost;
		#redirect to https
        rewrite ^(.*)$ https://$host$1  permanent;
    }


    #proxy connect service
    server {
        listen                         3128;

        # dns resolver used by forward proxying
        #resolver                       8.8.8.8;
	    
        # forward proxy for CONNECT requests
        proxy_connect;
        proxy_connect_address 127.0.0.1;
        proxy_connect_allow            443 563;
        proxy_connect_connect_timeout  10s;
        proxy_connect_data_timeout     10s;
	    
        # defined by yourself for non-CONNECT requests
        # Example: reverse proxy for non-CONNECT requests
        location / {
            proxy_pass http://$host;
            proxy_set_header Host $host;
        }
    }


}


stream{

    log_format basic ' [$time_local] $remote_addr $ssl_preread_server_name $upstream_addr '
                 '$ssl_preread_protocol $ssl_preread_alpn_protocols '
                 '$protocol $status $bytes_sent $bytes_received '
                 '$session_time';
    access_log /home/nginx/log/stream-access.log basic buffer=32k  flush=5m;

    map $ssl_preread_server_name $name {
        hostnames;
        .github.com          node_sin;
        .openai.com          node_tyo;
        default             node_hkg;
    }

    upstream node_hkg {
        server 1.1.1.1:11443;
    }

    upstream node_tyo {
        server 2.2.2.2:11443;
    }

    upstream node_sin {
        server 3.3.3.3:11443;
    }

    #local https service
    server{
        listen 443 reuseport;
        proxy_pass $name ;
        ssl_preread on;
        ssl_sni_encrypt on;
        key_base64 0PSgMqo/B/5WdQsIcA+bEjYWzQrXPUtJcrrcpSXZXyk=;
    }
	
    #remote https service
    server{
        listen 11443 reuseport;
        resolver 8.8.8.8 114.114.114.114 valid=2m;
        proxy_pass $ssl_preread_server_name:443;
        ssl_preread on;
        ssl_sni_decrypt on;
        key_base64 0PSgMqo/B/5WdQsIcA+bEjYWzQrXPUtJcrrcpSXZXyk=;
    }

}

